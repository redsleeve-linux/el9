From 137a22e0192941fa275b70665af7a0d54f6ad614 Mon Sep 17 00:00:00 2001
From: Frantisek Sumsal <frantisek@sumsal.cz>
Date: Wed, 15 Jun 2022 12:32:51 +0200
Subject: [PATCH] test: drop all LD_PRELOAD-related ASan workarounds

since they shouldn't be necessary anymore, as we tweak the "problematic"
binaries on per-binary basis.

(cherry picked from commit fa65ba6baac8c9241cf30802bb5fd3698d1f3189)

Related: #2087652
---
 test/test-functions | 54 +--------------------------------------------
 1 file changed, 1 insertion(+), 53 deletions(-)

diff --git a/test/test-functions b/test/test-functions
index a9ff561083..f55e64493d 100644
--- a/test/test-functions
+++ b/test/test-functions
@@ -593,10 +593,6 @@ install_verity_minimal() {
             # missing $LD_PRELOAD libraries.
             inst_libs "$ASAN_RT_PATH"
             inst_library "$ASAN_RT_PATH"
-            # Create a dummy LSan suppression file otherwise gcc's ASan
-            # complains as it doesn't exist in the minimal image
-            # (i.e. when running TEST-29 or TEST-50 under sanitizers)
-            touch "$initdir/systemd-lsan.supp"
         fi
         cp "$os_release" "$initdir/usr/lib/os-release"
         ln -s ../usr/lib/os-release "$initdir/etc/os-release"
@@ -792,20 +788,6 @@ if [[ ! -e "$ASAN_RT_PATH" ]]; then
     exit 1
 fi
 
-# Suppress certain leaks reported by LSan (either in external tools or bogus
-# ones)
-# Docs: # https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer#suppressions
-#
-# - fsck is called by systemd-homed and is reporting a leak we're not interested
-#   in
-# - libLLVM is a "side effect" caused by the previous fsck leak
-cat >/systemd-lsan.supp <<INNER_EOF
-leak:/bin/fsck$
-leak:/sbin/fsck$
-leak:/lib/libLLVM
-INNER_EOF
-
-DEFAULT_LSAN_OPTIONS=${LSAN_OPTIONS:-}:suppressions=/systemd-lsan.supp
 DEFAULT_ASAN_OPTIONS=${ASAN_OPTIONS:-strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1}
 DEFAULT_UBSAN_OPTIONS=${UBSAN_OPTIONS:-print_stacktrace=1:print_summary=1:halt_on_error=1}
 DEFAULT_ENVIRONMENT="ASAN_OPTIONS=\$DEFAULT_ASAN_OPTIONS UBSAN_OPTIONS=\$DEFAULT_UBSAN_OPTIONS LSAN_OPTIONS=\$DEFAULT_LSAN_OPTIONS"
@@ -818,9 +800,7 @@ mount -t proc proc /proc
 mount -t sysfs sysfs /sys
 mount -o remount,rw /
 
-# A lot of services (most notably dbus) won't start without preloading libasan
-# See https://github.com/systemd/systemd/issues/5004
-DEFAULT_ENVIRONMENT="\$DEFAULT_ENVIRONMENT LD_PRELOAD=$ASAN_RT_PATH ASAN_RT_PATH=$ASAN_RT_PATH"
+DEFAULT_ENVIRONMENT="\$DEFAULT_ENVIRONMENT ASAN_RT_PATH=$ASAN_RT_PATH"
 
 if [[ "$ASAN_COMPILER" == "clang" ]]; then
   # Let's add the ASan DSO's path to the dynamic linker's cache. This is pretty
@@ -857,38 +837,6 @@ printf "[Unit]\nConditionVirtualization=container\n\n[Service]\nTimeoutSec=240s\
 mkdir -p /etc/systemd/system/systemd-journal-flush.service.d
 printf "[Service]\nTimeoutSec=180s\n" >/etc/systemd/system/systemd-journal-flush.service.d/timeout.conf
 
-# D-Bus has troubles during system shutdown causing it to fail. Although it's
-# harmless, it causes unnecessary noise in the logs, so let's disable LSan's
-# at_exit check just for the dbus.service
-mkdir -p /etc/systemd/system/dbus.service.d
-printf "[Service]\nEnvironment=ASAN_OPTIONS=leak_check_at_exit=false\n" >/etc/systemd/system/dbus.service.d/disable-lsan.conf
-
-# Some utilities run via IMPORT/RUN/PROGRAM udev directives fail because
-# they're uninstrumented (like dmsetup). Let's add a simple rule which sets
-# LD_PRELOAD to the ASan RT library to fix this.
-mkdir -p /etc/udev/rules.d
-cat >/etc/udev/rules.d/00-set-LD_PRELOAD.rules <<INNER_EOF
-SUBSYSTEM=="block", ENV{LD_PRELOAD}="$ASAN_RT_PATH"
-INNER_EOF
-chmod 0644 /etc/udev/rules.d/00-set-LD_PRELOAD.rules
-
-# The 'mount' utility doesn't behave well under libasan, causing unexpected
-# fails during boot and subsequent test results check:
-# bash-5.0# mount -o remount,rw -v /
-# mount: /dev/sda1 mounted on /.
-# bash-5.0# echo \$?
-# 1
-# Let's workaround this by clearing the previously set LD_PRELOAD env variable,
-# so the libasan library is not loaded for this particular service
-unset_ld_preload() {
-    local _dropin_dir="/etc/systemd/system/\$1.service.d"
-    mkdir -p "\$_dropin_dir"
-    printf "[Service]\nUnsetEnvironment=LD_PRELOAD\n" >"\$_dropin_dir/unset_ld_preload.conf"
-}
-
-unset_ld_preload systemd-remount-fs
-unset_ld_preload testsuite-
-
 export ASAN_OPTIONS=\$DEFAULT_ASAN_OPTIONS:log_path=/systemd.asan.log UBSAN_OPTIONS=\$DEFAULT_UBSAN_OPTIONS
 exec "$ROOTLIBDIR/systemd" "\$@"
 EOF
