commit 43760d33d78f9ea8c8af942b570112ee801b99df
Author: Jangwoong Kim <6812skiii@gmail.com>
Date:   Tue Dec 14 21:30:51 2021 +0900

    nptl: Effectively skip CAS in spinlock loop
    
    The commit:
    "Add LLL_MUTEX_READ_LOCK [BZ #28537]"
    SHA1: d672a98a1af106bd68deb15576710cd61363f7a6
    
    introduced LLL_MUTEX_READ_LOCK, to skip CAS in spinlock loop
    if atomic load fails. But, "continue" inside of do-while loop
    does not skip the evaluation of escape expression, thus CAS
    is not skipped.
    
    Replace do-while with while and skip LLL_MUTEX_TRYLOCK if
    LLL_MUTEX_READ_LOCK fails.
    
    Reviewed-by: H.J. Lu <hjl.tools@gmail.com>
    (cherry picked from commit 6b8dbbd03ac88f169b65b5c7d7278576a11d2e44)

diff --git a/nptl/pthread_mutex_lock.c b/nptl/pthread_mutex_lock.c
index 49901ffa0a96d659..bbe754a272b97d91 100644
--- a/nptl/pthread_mutex_lock.c
+++ b/nptl/pthread_mutex_lock.c
@@ -147,10 +147,9 @@ PTHREAD_MUTEX_LOCK (pthread_mutex_t *mutex)
 		  break;
 		}
 	      atomic_spin_nop ();
-	      if (LLL_MUTEX_READ_LOCK (mutex) != 0)
-		continue;
 	    }
-	  while (LLL_MUTEX_TRYLOCK (mutex) != 0);
+	  while (LLL_MUTEX_READ_LOCK (mutex) != 0
+		 || LLL_MUTEX_TRYLOCK (mutex) != 0);
 
 	  mutex->__data.__spins += (cnt - mutex->__data.__spins) / 8;
 	}
