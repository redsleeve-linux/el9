commit 6bcfbee7277e4faa4b693bd965931f0d1883005d
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Fri Nov 12 11:47:42 2021 -0800

    Move assignment out of the CAS condition
    
    Update
    
    commit 49302b8fdf9103b6fc0a398678668a22fa19574c
    Author: H.J. Lu <hjl.tools@gmail.com>
    Date:   Thu Nov 11 06:54:01 2021 -0800
    
        Avoid extra load with CAS in __pthread_mutex_clocklock_common [BZ #28537]
    
        Replace boolean CAS with value CAS to avoid the extra load.
    
    and
    
    commit 0b82747dc48d5bf0871bdc6da8cb6eec1256355f
    Author: H.J. Lu <hjl.tools@gmail.com>
    Date:   Thu Nov 11 06:31:51 2021 -0800
    
        Avoid extra load with CAS in __pthread_mutex_lock_full [BZ #28537]
    
        Replace boolean CAS with value CAS to avoid the extra load.
    
    by moving assignment out of the CAS condition.
    
    (cherry picked from commit 120ac6d238825452e8024e2f627da33b2508dfd3)

diff --git a/nptl/pthread_mutex_lock.c b/nptl/pthread_mutex_lock.c
index 9f40928cc6b9a067..49901ffa0a96d659 100644
--- a/nptl/pthread_mutex_lock.c
+++ b/nptl/pthread_mutex_lock.c
@@ -305,10 +305,9 @@ __pthread_mutex_lock_full (pthread_mutex_t *mutex)
 	     meantime.  */
 	  if ((oldval & FUTEX_WAITERS) == 0)
 	    {
-	      int val;
-	      if ((val = atomic_compare_and_exchange_val_acq
-		   (&mutex->__data.__lock, oldval | FUTEX_WAITERS,
-		    oldval)) != oldval)
+	      int val = atomic_compare_and_exchange_val_acq
+		(&mutex->__data.__lock, oldval | FUTEX_WAITERS, oldval);
+	      if (val != oldval)
 		{
 		  oldval = val;
 		  continue;
diff --git a/nptl/pthread_mutex_timedlock.c b/nptl/pthread_mutex_timedlock.c
index 90cede9446e33fcf..2e5506db06ccb1ec 100644
--- a/nptl/pthread_mutex_timedlock.c
+++ b/nptl/pthread_mutex_timedlock.c
@@ -234,10 +234,9 @@ __pthread_mutex_clocklock_common (pthread_mutex_t *mutex,
 	     meantime.  */
 	  if ((oldval & FUTEX_WAITERS) == 0)
 	    {
-	      int val;
-	      if ((val = atomic_compare_and_exchange_val_acq
-		   (&mutex->__data.__lock, oldval | FUTEX_WAITERS,
-		    oldval)) != oldval)
+	      int val = atomic_compare_and_exchange_val_acq
+		(&mutex->__data.__lock, oldval | FUTEX_WAITERS, oldval);
+	      if (val != oldval)
 		{
 		  oldval = val;
 		  continue;
