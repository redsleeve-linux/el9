commit 47076b3163ce645f791d5c8f80080e9811733347
Author: Maciej W. Rozycki <macro@redhat.com>
Date:   Fri Mar 28 12:35:53 2025 +0000

    stdio-common: Add tests for formatted vsscanf input specifiers
    
    Wire vsscanf into test infrastructure for formatted scanf input
    specifiers.
    
    Reviewed-by: Joseph Myers <josmyers@redhat.com>

diff --git a/stdio-common/Makefile b/stdio-common/Makefile
index fd3c86cc7df68e57..3cb9da43d20bb31a 100644
--- a/stdio-common/Makefile
+++ b/stdio-common/Makefile
@@ -52,7 +52,7 @@ nonfmt-xprintf-stems := \
 xprintf-stems := $(sort $(fmt-xprintf-stems) $(nonfmt-xprintf-stems))
 
 # List of markers for scanf family function tests.
-xscanf-funcs := s f ss v vf
+xscanf-funcs := s f ss v vf vs
 
 # List of data types and formats for individual per-conversion scanf tests.
 # Further conversions are provided by sysdeps.
diff --git a/stdio-common/tst-scanf-format-vs-c.c b/stdio-common/tst-scanf-format-vs-c.c
new file mode 100644
index 0000000000000000..2df5aa7acbecf851
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-c.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for the character conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-character.h"
+#include "tst-scanf-format-skeleton-c.c"
diff --git a/stdio-common/tst-scanf-format-vs-char.c b/stdio-common/tst-scanf-format-vs-char.c
new file mode 100644
index 0000000000000000..ae4d8e0d0a06b549
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-char.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for signed char conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-char.c"
diff --git a/stdio-common/tst-scanf-format-vs-double.c b/stdio-common/tst-scanf-format-vs-double.c
new file mode 100644
index 0000000000000000..cd459a8506d4a1e1
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-double.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for double conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-real.h"
+#include "tst-scanf-format-skeleton-double.c"
diff --git a/stdio-common/tst-scanf-format-vs-float.c b/stdio-common/tst-scanf-format-vs-float.c
new file mode 100644
index 0000000000000000..7872afef5a49c515
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-float.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for float conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-real.h"
+#include "tst-scanf-format-skeleton-float.c"
diff --git a/stdio-common/tst-scanf-format-vs-int.c b/stdio-common/tst-scanf-format-vs-int.c
new file mode 100644
index 0000000000000000..e67b4be6c1ffffb4
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-int.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for int conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-int.c"
diff --git a/stdio-common/tst-scanf-format-vs-ldouble.c b/stdio-common/tst-scanf-format-vs-ldouble.c
new file mode 100644
index 0000000000000000..4d299c29eeee5202
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-ldouble.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for long double conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-real.h"
+#include "tst-scanf-format-skeleton-ldouble.c"
diff --git a/stdio-common/tst-scanf-format-vs-llong.c b/stdio-common/tst-scanf-format-vs-llong.c
new file mode 100644
index 0000000000000000..06c8cc921f40bcab
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-llong.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for long long conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-llong.c"
diff --git a/stdio-common/tst-scanf-format-vs-long.c b/stdio-common/tst-scanf-format-vs-long.c
new file mode 100644
index 0000000000000000..575a6cb36a20385d
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-long.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for long conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-long.c"
diff --git a/stdio-common/tst-scanf-format-vs-short.c b/stdio-common/tst-scanf-format-vs-short.c
new file mode 100644
index 0000000000000000..5473471996bfad9b
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-short.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for short int conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-short.c"
diff --git a/stdio-common/tst-scanf-format-vs-uchar.c b/stdio-common/tst-scanf-format-vs-uchar.c
new file mode 100644
index 0000000000000000..5a29b9b944f7df31
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-uchar.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for unsigned char conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-uchar.c"
diff --git a/stdio-common/tst-scanf-format-vs-uint.c b/stdio-common/tst-scanf-format-vs-uint.c
new file mode 100644
index 0000000000000000..b9486b1488270d7a
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-uint.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for unsigned int conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-uint.c"
diff --git a/stdio-common/tst-scanf-format-vs-ullong.c b/stdio-common/tst-scanf-format-vs-ullong.c
new file mode 100644
index 0000000000000000..5396a7812fc13c39
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-ullong.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for unsigned long long int conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-ullong.c"
diff --git a/stdio-common/tst-scanf-format-vs-ulong.c b/stdio-common/tst-scanf-format-vs-ulong.c
new file mode 100644
index 0000000000000000..3dbc14206dea3176
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-ulong.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for unsigned long int conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-ulong.c"
diff --git a/stdio-common/tst-scanf-format-vs-ushort.c b/stdio-common/tst-scanf-format-vs-ushort.c
new file mode 100644
index 0000000000000000..0f28b36dee83ddbe
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs-ushort.c
@@ -0,0 +1,22 @@
+/* Test for formatted 'vsscanf' input for unsigned short int conversions.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "tst-scanf-format-skeleton.h"
+#include "tst-scanf-format-vs.h"
+#include "tst-scanf-format-integer.h"
+#include "tst-scanf-format-skeleton-ushort.c"
diff --git a/stdio-common/tst-scanf-format-vs.h b/stdio-common/tst-scanf-format-vs.h
new file mode 100644
index 0000000000000000..d49690daa00bb954
--- /dev/null
+++ b/stdio-common/tst-scanf-format-vs.h
@@ -0,0 +1,77 @@
+/* Test feature wrapper for formatted 'vsscanf' input.
+   Copyright (C) 2025 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include <stdarg.h>
+#include <stddef.h>
+#include <stdio.h>
+#include <stdlib.h>
+
+#include <support/support.h>
+
+static char *sscanf_buf;
+static size_t sscanf_buf_size;
+
+static void __attribute__ ((destructor))
+scanf_under_test_fini (void)
+{
+  free (sscanf_buf);
+}
+
+static int
+scanf_under_test (const char *restrict fmt, ...)
+{
+  size_t i = 0;
+  va_list ap;
+  int result;
+  int ch;
+
+  do
+    {
+      ch = read_input ();
+      if (ch < 0)
+	{
+	  result = ch;
+	  goto out;
+	}
+      if (i == sscanf_buf_size)
+	{
+	  sscanf_buf_size += SIZE_CHUNK;
+	  /* Add an extra byte for the terminating null character.  */
+	  sscanf_buf = xrealloc (sscanf_buf, sscanf_buf_size + 1);
+	}
+      sscanf_buf[i++] = ch;
+    }
+  while (ch != ':');
+  sscanf_buf[i++] = '\0';
+
+  ch = ungetc (ch, stdin);
+  if (ch == EOF)
+    {
+      result = INPUT_ERROR;
+      goto out;
+    }
+
+  va_start (ap, fmt);
+  result = vsscanf (sscanf_buf, fmt, ap);
+  va_end (ap);
+  if (result == EOF)
+    result = INPUT_EOF;
+
+out:
+  return result;
+}
